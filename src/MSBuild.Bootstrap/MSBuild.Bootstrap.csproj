<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(RuntimeOutputTargetFrameworks)</TargetFrameworks>

    <!-- Don't warn on incompatability MSIL vs x86 since this isn't an actual working DLL -->
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <DeterministicSourcePaths>false</DeterministicSourcePaths>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\MSBuild\MSBuild.csproj" />
    
    <!-- Direct project references needed here to avoid NuGet version conflict errors -->
    <ProjectReference Include="..\Framework\Microsoft.Build.Framework.csproj" />
    <ProjectReference Include="..\Tasks\Microsoft.Build.Tasks.csproj" />
    <ProjectReference Include="..\Utilities\Microsoft.Build.Utilities.csproj" />
  </ItemGroup>
  <ItemGroup Condition="'$(MonoBuild)' != 'true'">
    <!-- This file is needed so the dotnet CLI knows how to map preview SDK versions to tfms (because tfms do not have preview information on them) -->
    <!-- This is because according to semver, 2.1.0-preview is not >= 2.1.0 -->
    <Content Include="$(RepoRoot).dotnet\sdk\$(DotNetCliVersion)\Microsoft.NETCoreSdk.BundledVersions.props" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup Condition="'$(MonoBuild)' == 'true'">
    <!-- Include the bundled SDKs -->
    <Content Include="$(RepoRoot)sdks\**\*" LinkBase="Sdks" CopyToOutputDirectory="PreserveNewest" />

    <!-- Use the NuGet.targets that we bundle, since that is what we will install so we should be testing against that -->
    <Content Include="$(RepoRoot)nuget-support\tasks-targets\*" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup Condition="'$(MonoBuild)' != 'true'">
    <!-- Include NuGet build tasks -->
    <PackageReference Include="NuGet.Build.Tasks" />
    <PackageReference Include="Microsoft.Build.NuGetSdkResolver" />

    <!-- Include DependencyModel libraries. -->
    <PackageReference Include="Microsoft.Extensions.DependencyModel" />
  </ItemGroup>

  <!-- Use deps file from this project with additional dependencies listed instead of the one generated in the MSBuild project -->
  <Target Name="UpdateMSBuildDepsFile" AfterTargets="Build" Condition="'$(TargetFramework)' == 'netcoreapp2.1' or '$(TargetFramework)' == 'netstandard2.0'">
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).deps.json" DestinationFiles="$(OutputPath)MSBuild.deps.json" />
  </Target>
  <Target Name="UpdatePublishedMSBuildDepsFile" AfterTargets="Publish" Condition="'$(TargetFramework)' == 'netcoreapp2.1'">
    <Copy SourceFiles="$(PublishDir)$(AssemblyName).deps.json" DestinationFiles="$(PublishDir)MSBuild.deps.json" />
  </Target>

  <Import Project="$(RepoRoot)eng\BootStrapMSBuild.targets" />

</Project>
